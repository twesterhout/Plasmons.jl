
using LinearAlgebra
using SparseArrays
using HDF5

"""
    read_hamiltonian(file) -> Hermitian

TiPSi stores the Hamiltonian in CSR format, but Julia works with CSC matrices.
Since we know that the Hamiltonian is hermitian, it should remain invariant
under transposition and then complex conjugation. Thus we use complex conjugate
of `sample/hop` as data and then simply pretend that the format is CSC (which is
equivalent to transposition).
"""
function read_hamiltonian(f::HDF5File)
    sample = f["sample"]
    n = length(sample["site_x"])
    colptr = read(sample["indptr"]) .+ 1
    rowval = read(sample["indices"]) .+ 1
    nzval = read(sample["hop"])
    if isreal(nzval)
        return Symmetric(Matrix(SparseMatrixCSC(n, n, colptr, rowval, real(nzval))))
    else
        return Hermitian(Matrix(SparseMatrixCSC(n, n, colptr, rowval, conj(nzval))))
    end
end

"""
    read_coordinates(file) -> (x, y, z)

Read coordinates of lattice sites from hdf5 file generated by TiPSi. Return a
tuple of three `Float64` vectors: `x`, `y`, and `z` coordinates.
"""
function read_coordinates(f::HDF5File)
    sample = f["sample"]
    x = read(sample["site_x"])
    y = read(sample["site_y"])
    z = read(sample["site_z"])
    return x, y, z
end
